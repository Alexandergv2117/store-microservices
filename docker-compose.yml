version: '3.8'

name: store

networks:
  store-network:
    driver: bridge

services:

# Database

  postgres-db:
    container_name: store-postgres-db
    build:
      context: ./dev/postgres
      dockerfile: Dockerfile
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: store
    networks:
      - store-network

  # Services

  auth:
    container_name: store-auth
    build:
      context: ./services/auth
      dockerfile: ../../dev/services/go/Dockerfile
    expose:
      - 5000
    ports:
      - 5000:5000
    command: sh -c 'go mod download && go install && npm i && npm run dev'
    volumes:
      - ./services/auth:/srv
    networks:
      - store-network
    environment:
      DB_HOST: postgres-db
      DB_PORT: 5432
      DB_USERNAME: admin
      DB_PASSWORD: admin
      DB_NAME: store_users
      JWT_SECRET: secret

  users:
    user: node
    container_name: store-users
    build:
      context: ./services/users
      dockerfile: ../../dev/services/nestjs/Dockerfile
    expose:
      - 5200
    ports:
      - 5200:5200
    command: sh -c 'npm i && npm run start:dev'
    volumes:
      - ./services/users:/srv
    networks:
      - store-network
    environment:
      DB_HOST: postgres-db
      DB_PORT: 5432
      DB_USERNAME: admin
      DB_PASSWORD: admin
      DB_NAME: store_users
      DB_LOGGING: false

  products:
    user: node
    container_name: store-products
    build:
      context: ./services/products
      dockerfile: ../../dev/services/nestjs/Dockerfile
    expose:
      - 5300
    ports:
      - 5300:5300
    command: sh -c 'npm i && npm run start:dev'
    volumes:
      - ./services/products:/srv
    networks:
      - store-network
    environment:
      DB_HOST: postgres-db
      DB_PORT: 5432
      DB_USERNAME: admin
      DB_PASSWORD: admin
      DB_NAME: store_products
      DB_LOGGING: false

  # API Gateway

  nginx:
    container_name: store-nginx
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./dev/nginx/:/etc/nginx/
    networks:
      - store-network